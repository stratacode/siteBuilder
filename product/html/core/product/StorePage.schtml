<%@
   @CompilerSettings(constructorProperties="sitePathName,pagePathName")
   @sc.js.JSSettings(dependentTypes="sc.product.StoreView,sc.product.ProductView,sc.product.CategoryView,sc.product.OrderView,sc.user.currentUserView,sc.content.SlideshowView,sc.content.ContentView")
   @sc.obj.SyncTypeFilter(typeNames={"sc.product.StoreView", "sc.product.ProductView", "sc.product.CategoryView",
                                     "sc.product.OrderView", "sc.product.OptionView", "sc.user.currentUserView",
                                     "sc.content.SlideshowView", "sc.content.ContentView"})
   @URL(pattern="/stores/{sitePathName=urlString}[/page/{pagePathName=urlString}]", testURLs={"/stores/stratacycles", "/stores/stratacycles/page/about"})
   @Sync(onDemand=true)
%>
<html extends="BaseStorePage">
   <%!
      String pagePathName;

      @Sync(initDefault=true)
      object pageView extends PageView {
         siteView := StorePage.this.siteView;
         pagePathName := StorePage.this.pagePathName;
      }

      sitePathName =: siteView.pathName = sitePathName;

      StorePage(String sitePathName, String pagePathName) {
         super(sitePathName);
         this.pagePathName = pagePathName;
      }
   %>
   <head exec="server">
      <link id="docStyle" rel="stylesheet" href="/productStyle.css" type="text/css"/>
   </head>
   <body>
      <div id="appFrame">
         <div id="pageBody">
             <div id="pageFormError" class="pageFormError" visible=":= pageView.errorMessage != null"><%= pageView.errorMessage %></div>
             <div id="pageChildView" repeat=":= pageView.childViews" repeatWrapper="sc.content.ChildViewWrapper"/>
         </div>
      </div>
   </body>
</html>
