<%@
   @CompilerSettings(constructorProperties="sitePathName,pagePathName")
   @sc.js.JSSettings(dependentTypes="sc.product.StoreView,sc.product.ProductView,sc.product.CategoryView,sc.product.OrderView")
   @sc.obj.SyncTypeFilter(typeNames={"sc.product.StoreView", "sc.product.ProductView", "sc.product.CategoryView", "sc.product.OrderView"})
   @URL(pattern="/stores/{sitePathName=urlString}[/page/{pagePathName=urlString}]", testURLs={"/stores/stratacycles", "/stores/stratacycles/page/about"})
%>
<html extends="BaseStorePage" pageVisitCount="=: refreshPage()">
   <%!
      String pagePathName;
      List<ViewDef> childViews := pageView.pageDef.childViews;
      childViews =: refreshPage();
      PageView pageView := siteView.getPageView(pagePathName);

      StorePage(String sitePathName, String pagePathName) {
         super(sitePathName);
         this.pagePathName = pagePathName;
      }

      void refreshPage() {
         body.appFrame.pageBody.pageChildView_Repeat.rebuildRepeat();
      }

   %>
   <head exec="server">
      <link id="docStyle" rel="stylesheet" href="/productStyle.css" type="text/css"/>
   </head>
   <body>
      <div id="appFrame">
         <div id="pageBody">
             <div id="formError"><%= pageView.errorMessage %></div>
             <div id="pageChildView" repeat=":= childViews" pageView=":= StorePage.this.pageView" repeatWrapper="sc.content.ChildViewWrapper"/>
         </div>
      </div>
   </body>
</html>
