<div>
   <%!
      SiteView siteView;
      StoreView storeView := (StoreView) siteView;
      OrderView orderView := storeView.orderView;
      UserView userView := currentUserView;

      UserProfile user := userView.user;
      Order order := orderView.order;
      Storefront store := storeView.store;

      object quantityConverter extends IntConverter {}
   %>
   <div id="title" class="cartTitle"><%= store.siteName %> - checkout</div>
   <div id="cartWrapper" visible=":= order.numLineItems != 0">
      <div id="checkoutView" visible=":= order.orderNumber == null && order.checkoutStarted">
         <div id="guestCheckoutBox" visible=":= userView.loginStatus == LoginStatus.NotLoggedIn">
            <div class="viewTitle">Continue as a guest or <a href="/login">login</a></div>
            <div id="orderErrorView" visible=":= orderView.orderError != null">
               Please correct these errors: <%= orderView.orderError %>
            </div>
            <div id="emailFieldBox" class="fieldBox">
               <%!
                  boolean hasError := TextUtil.hasMapEntry(orderView.propErrors, "emailAddress");
               %>
               <label for="emailAddrField" class="fieldLabel">Email address</label>
               <input id="emailAddrField" class=':= hasError ? "fieldInputError" : "fieldInput"' type="email"
                      value=":= order.emailAddress" changeEvent="=: orderView.updateEmailAddress(value)"/>
               <div id="emailError" class="fieldError" visible=":= hasError">
                  <%= orderView.propErrors.get("emailAddress") %>
               </div>
            </div>
            <div id="shippingAddressView" extends="AddressEditView"
                 address=":= order.shippingAddress"
                 defaultCountry=":= store.defaultCountry"
                 countryNames=":= store.countryNames"
                 addressName="Shipping address"/>
            <div><input id="billToShippingField" type="checkbox" checked=":=: orderView.billToShipping">Bill to shipping address?</div>
            <div id="billingAddressView" extends="AddressEditView"
                 visible=":= !orderView.billToShipping"
                 address=":= order.billingAddress"
                 defaultCountry=":= store.defaultCountry"
                 countryNames=":= store.countryNames"
                 addressName="Billing address"/>
            <div id="paymentView" class="paymentView">
               <div class="viewTitle">Payment info</div>
               <div id="cardHolderFieldBox" class="fieldBox">
                  <%! boolean hasError := TextUtil.hasMapEntry(order.paymentInfo.propErrors, "cardHolder"); %>
                  <label for="cardHolderField">Name on card</label>
                  <input id="cardHolderField" class=':= hasError ? "fieldInputError" : "fieldInput"'
                         type="text" value=":=: order.paymentInfo.cardHolder" liveEdit="off"/>
                  <div class="fieldError" visible=':= hasError'>
                     <%= order.paymentInfo.propErrors.get("cardHolder") %>
                  </div>
               </div>
               <div id="cardNumberFieldBox" class="fieldBox">
                  <%! boolean hasError := TextUtil.hasMapEntry(order.paymentInfo.propErrors, "cardNumber"); %>
                  <label for="cardNumberField" class="fieldLabel">Card number</label>
                  <input type="text" class=':= hasError ? "fieldInputError" : "fieldInput"'
                         value=":= order.paymentInfo.cardNumberDisplay"
                         value="=: order.paymentInfo.updateCardNumber(value)"/>
                  <div class="fieldError" visible=':= hasError'>
                     <%= order.paymentInfo.propErrors.get("cardNumber") %>
                  </div>
               </div>
               <div id="expDateFieldBox" class="fieldBox">
                   <%! boolean hasError := TextUtil.hasMapEntry(order.paymentInfo.propErrors, "expMonth") ||
                                           TextUtil.hasMapEntry(order.paymentInfo.propErrors, "expYear"); %>
                  <label for="expDateField" class="fieldLabel">Expiration date</label>
                  <input type="text" id="expDateField"
                         class=':= hasError ? "fieldInputError" : "fieldInput"' placeholder="MM / YY " value=":= order.paymentInfo.expDateString"
                         value="=: order.paymentInfo.updateExpireDate(value)"/>
                  <div class="fieldError" visible=':= hasError'>
                     <%= order.paymentInfo.propErrors.get("expMonth") %><%= order.paymentInfo.propErrors.get("expYear") %>
                  </div>
               </div>
               <div id="cvvFieldBox" class="fieldBox">
                  <%! boolean hasError := TextUtil.hasMapEntry(order.paymentInfo.propErrors, "cvv"); %>
                  <label for="cvvField" class="fieldLabel">Security code</label>
                  <input type="text" id="cvvField" placeholder="123" value=":= order.paymentInfo.cvv" size="4" minlength="3" maxlength="4"
                         value="=: order.paymentInfo.updateCvv(value)" pattern="\\d*"/>
                  <div class="fieldError" visible=':= hasError'><%= order.paymentInfo.propErrors.get("cvv") %></div>
               </div>
            </div>
         </div>
         <div id="registeredCheckout" visible=":= userView.loginStatus == LoginStatus.LoggedIn">
            Order for <%= user.displayName %> with <%= user.emailAddress %>
            Shipping to: <span id="shipAddressBox" extends="AddressDisplayView" address=":= order.shippingAddress"/>
         </div>
      </div>
      <div id="cartContents" class="cartContents">
         <div id="lineItemRepeat" repeat=":= order.lineItems" repeatVarName="lineItem" class="cartLineItem">
            <img class="cartProductThumb" src="= lineItem.product.mainMedia.thumbUrl"/>
            <div class="cartProductInfo">
               <div id="productName"><%= lineItem.product.name %> - <%= lineItem.product.shortDesc %></div>
               <div id="cartOptions" class="cartOptions">
                  <div id="cartOption" repeat=":= lineItem.product.sku.optionScheme.options" repeatVarName="option" class="cartOption">
                     <span><%= option.optionName %>: </span>
                     <span><%= lineItem.sku.options.get(cartOption.this.repeatIndex).optionValue %></span>
                  </div>
               </div>
            </div>
            <input type="text" class="cartLineItemQuantity"
                   value=":= quantityConverter.intToString(lineItem.quantity)"
                   changeEvent="=: orderView.changeQuantity(lineItem, value)"/>
            <div id="cartStatus" class="cartStatus"><%= lineItem.sku.inStock ? "in stock" : "backordered" %></div>
            <div id="price" class="cartPrice"><%= lineItem.totalPrice %></div>
            <img class="cartDeleteItem" id="deleteIcon" src="/icons/x-square.svg" clickEvent="=: orderView.deleteLineItem(lineItem)"/>
         </div>
         <div id="totalPrice" class="cartTotalPrice">
            Total:
            <span id="cartPrice">
                <%= order.currency.symbol %><%= order.totalPrice %>
            </span>
            <div id="actionButtonBox">
               <input id="actionButton" type="button"
                      value=':= order.checkoutStarted ? "Submit order" : "Checkout"'
                      clickEvent="=: orderView.performAction()"/>
            </div>
         </div>
      </div>
      <div id="alt" class="cartMessage">
         Cart is empty
      </div>
   </div>
   <div id="completedOrderView">
      <div id="submittedOrderView" visible=":= orderView.completedOrder != null">
         <p>
         <hr>
         Order <%= orderView.completedOrder.orderNumber %> submitted on <%= orderView.completedOrder.submittedOn %>
         <p>
         Ship to: <div id="completedShipTo" extends="AddressDisplayView" address=":= orderView.completedOrder.shippingAddress"/>
         <p>
         Total: <%= orderView.completedOrder.totalPrice %>
         <p>
         Bill to: <div id="completedShipTo" extends="AddressDisplayView" address=":= orderView.completedOrder.billingAddress"/>
      </div>
   </div>
</div>
