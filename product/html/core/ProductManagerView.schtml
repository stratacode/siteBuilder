<div>
   <div id="findProductsView">
      <div id="findProductsForm" visible=":= !addInProgress">
         Find products <input type="text" value=":=: searchText" changeEvent="=: doSearch()"/>
         <input type="image" class="findMediaButton" src="/icons/search.svg" clickEvent="=: doSearch()"/>
         <input type="image" class="clearMediaButton" src="/icons/x-square.svg" clickEvent="=: resetForm()"/>
      </div>
   </div>

   <div id="extraFormView">
      <div id="startAddView">
         <div visible=":= !addInProgress">
            <input type="button" value="Add product" clickEvent="=: startAddProduct(false)" />
            <input type="button" class="rightButton" visible=":= product != null" value="Copy product" clickEvent="=: startAddProduct(true)"/>
         </div>
      </div>

      <div id="detailFormView" visible=":= product != null">
      <%!
         boolean hasNameError := TextUtil.hasMapEntry(product.propErrors, "name");
         boolean hasPathNameError := TextUtil.hasMapEntry(product.propErrors, "pathName");
         boolean hasParentCategoryError := TextUtil.hasMapEntry(product.propErrors, "parentCategory");
      %>
         <div class="formTitle"> <%= addInProgress ? "Unsaved product" : "Update product" %></div>
         <div id="nameFieldView" class="formView">
            <label for="nameField">Product name</label><input id="nameField" type="text" value=":=: product.name" changeEvent="=: updateProductName(value)"/>
         </div>
         <div><div id="nameErrorView" class="formViewError" visible=":= hasNameError"><%= product.propErrors.get("name") %></div></div>
         <div id="pathNameView" class="formView">
            <label for="pathNameField">Path name</label><input id="pathNameField" type="text" value=":= product.pathName" changeEvent="=: updatePathName(value)"/>
         </div>
         <div><div id="pathNameErrorView" class="formViewError" visible=":= hasPathNameError"><%= product.propErrors.get("pathName") %></div></div>
         <div id="parentCategoryView" class="formView">
            <label for="parentCategoryField">Parent category path</label>
            <input id="parentCategoryField" type="text" list="= parentCategorySuggestions.getId()"
                   value=':= defaultCategory == null ? "" : defaultCategory.pathName'
                   keyUpEvent="=: updateMatchingCategories(value)" changeEvent="=: updateParentCategory(value)" />
            <datalist id="parentCategorySuggestions">
               <option repeat=":= matchingCategories" repeatVarName="matchingCat" value=":= matchingCat.pathName"/>
            </datalist>
         </div>
         <div><div id="parentCategoryErrorView" class="formViewError" visible=":= hasParentCategoryError"><%= product.propErrors.get("parentCategory") %></div></div>

         <div id="shortDescView" class="formView">
            <label for="shortDescField">Short description</label>
            <input id="shortDescField" type="text" value=":=: product.shortDesc" class="shortDescField"/>
         </div>

         <div id="longDescView" class="subFormView">
            <label for="longDescText" class="subFormTitle">Long description</label>
            <div id="longDescText" class="longDescText" extends="HtmlTextEditor" placeholder="Enter product description..." content=":= product.longDesc"
                 content="=: updateLongDesc(content)"/>
         </div>

         <div id="addMediaView" class="subFormView">
            <span class="subFormTitle">Product media</span>
            <span id="mediaTitle" visible=":= product.altMedia != null && product.altMedia.size() > 0">
               <span id="alt" class="mediaEmptyTitle">No media - add files from the library or upload new ones</span>
            </span>
            <div class="mediaImageList">
               <div id="prodMediaView" class="prodMediaView" repeat=":= product.altMedia" repeatVarName="media">
                  <img src=":= media.thumbUrl"/>
                  <span>
                     <input type="checkbox" checked=":= media == product.mainMedia" changeEvent="=: product.mainMedia = media"/> main
                     <input type="image" class="clearMediaButton" src="/icons/x-square.svg" clickEvent="=: removeProductMedia(media.id)"/>
                  </span>
                  <span><input type="checkbox" checked=":=: product.visible"/> visible</span>
               </div>
            </div>
            <div id="findMedia" class="formView">
               <label for="findMediaField">Add existing media</label>
               <input id="findMediaField" type="text" list="= findMediaSuggestions.getId()"
                      keyUpEvent="=: updateMatchingMedia(value)" changeEvent="=: updateProductMedia(value)" />
               <datalist id="findMediaSuggestions">
                  <option repeat=":= matchingMedia" repeatVarName="matchedMedia" value=":= matchedMedia.uniqueFileName"/>
               </datalist>
            </div>
            <form id="addMediaForm" class="formView" method="post" enctype="multipart/form-data">
            <%!
               submitResult =: addMediaResult(submitResult);
               submitError =: addMediaError(submitError);
            %>
               <label for="uploadFile">Add new media</label>
               <input type="file" id="uploadFile" name="fileToUpload" accept=".jpg, .jpeg, .png"
                      changeEvent="=: addMediaForm.submitFormData("/mediaUpload")"/>
               <input id="mediaManagerIdField" type="hidden" name="mediaManagerId" value=":= String.valueOf(store.mediaManager.id)"/>
               <div><%= addMediaForm.submitInProgress ? "Uploading..." : (mediaErrorMessage != null ? mediaErrorMessage : mediaStatusMessage) %></div>
            </form>
         </div>

         <div id="skuView" class="formView">
            <label for="skuField">Product Sku</label>
            <input id="skuField" type="text" list="= skuSuggestions.getId()"
                   value=":= product.sku == null ? "" : product.sku.skuCode" keyUpEvent="=: updateMatchingSkus(value)" changeEvent="=: updateProductSku(value)"/>
            <datalist id="skuSuggestions">
               <option repeat=":= matchingSkus" repeatVarName="matchingSku" value=":= matchingSku.skuCode"/>
            </datalist>
            <input class="rightButton" type="button" value="Add Sku" clickEvent="=: startAddSku()"/>
            <div id="skuErrorView" class="formView"><%= skuErrorMessage %></div>
         </div>

         <div><div id="addSkuView" visible=":= addSkuInProgress" class="subFormView">
            <%! boolean hasSkuCodeError := TextUtil.hasMapEntry(sku.propErrors, "skuCode"); %>
            <span class="subFormTitle">Add Sku</span>
            <div class="formView">
               <label>Product type</label>
               <input type="radio" id="digitalRadio" name="skuType" checked=":= skuTypeId == 1"
                      changeEvent="=: checked ? updateSkuType(1) : null" value="1"/>
               <div>
                  <label for="digitalRadio">Digital</label>
                  <input type="radio" id="physicalRadio" name="skuType" checked=":= skuTypeId == 2"
                         changeEvent="=: checked ? updateSkuType(2) : null" value="2"/>
                  <label for="physicalRadio">Physical</label>
               </div>
            </div>
            <div id="skuCodeView" class="formView">
               <label for="skuCodeField">Sku code</label>
               <input type="text" id="skuCodeField" value=":=: sku.skuCode" placeholder="unique code"/>
            </div>
            <div id="skuCodeError" class="formViewError" visible=":= hasSkuCodeError"> <%= sku.propErrors.get("skuCode") %> </div>
            <div id="barCodeView" class="formView">
               <%! boolean hasError := TextUtil.hasMapEntry(sku.propErrors, "barCode"); %>
               <label for="barCodeField">Bar code</label>
               <input type="text" id="barCodeField" value=":=: sku.barCode" placeholder="optional"/>
               <div id="barCodeError" visible=":= hasError">
                  <%= sku.propErrors.get("barCode") %>
               </div>
            </div>
            <div id="priceView" class="formView">
               <%! boolean hasError := TextUtil.hasMapEntry(sku.propErrors, "price"); %>
               <label for="priceField">Price</label>
               <input type="text" id="priceField" changeEvent="=: sku.updatePrice(value)"/>
               <div id="priceError" visible=":= hasError">
                  <%= sku.propErrors.get("price") %>
               </div>
            </div>
            <div id="discountPriceView" class="formView">
               <%! boolean hasError := TextUtil.hasMapEntry(sku.propErrors, "discountPrice"); %>
               <label for="discountPriceField">Discount price</label>
               <input type="text" id="discountPriceField" changeEvent="=: sku.updateDiscount(value)"/>
               <div id="discountPriceError" visible=":= hasError">
                  <%= sku.propErrors.get("discountPrice") %>
               </div>
            </div>
            <div id="physicalSkuView" visible=":= psku != null">
               <div id="weightView" class="formView">
                  <%! boolean hasError := TextUtil.hasMapEntry(psku.propErrors, "weight"); %>
                  <label for="weightField">Weight</label>
                  <input type="text" id="weightField" changeEvent="=: psku.updateWeight(value)"/>
                  <div id="weightError" visible=":= hasError" class="formViewError">
                     <%= sku.propErrors.get("weight") %>
                  </div>
               </div>
               <div id="heightView" class="formView">
                  <%! boolean hasError := TextUtil.hasMapEntry(psku.propErrors, "height"); %>
                  <label for="heightField">Height</label>
                  <input type="text" id="heightField" changeEvent="=: psku.updateHeight(value)"/>
                  <div id="heightError" visible=":= hasError" class="formViewError">
                     <%= sku.propErrors.get("height") %>
                  </div>
               </div>
               <div id="lengthView" class="formView">
                  <%! boolean hasError := TextUtil.hasMapEntry(psku.propErrors, "length"); %>
                  <label for="lengthField">Length</label>
                  <input type="text" id="lengthField" changeEvent="=: psku.updateLength(value)"/>
                  <div id="lengthError" visible=":= hasError" class="formViewError">
                     <%= sku.propErrors.get("length") %>
                  </div>
               </div>
               <div class="checkFormView">
                  <input type="checkbox" id="inventoryCheckbox" checked=":= psku.inventory != null" changeEvent="=: updateManageInventory(checked)"/>
                  <label for="inventoryCheckbox">Manage inventory?</label>
               </div>
               <div id="inventoryView" visible=":= psku.inventory != null" class="formView">
                  <%! boolean hasError := TextUtil.hasMapEntry(psku.inventory.propErrors, "quantity"); %>
                  <label for="quantityField">Quantity</label>
                  <input type="number" id="quantityField" value=":= String.valueOf(psku.inventory.quantity)" changeEvent="=: psku.inventory.updateQuantityStr(value)"/>
                  <div id="quantityErrorView" class="formViewError" visible=":= hasError">
                     <%= psku.inventory.propErrors.get("quantity") %>
                  </div>
               </div>
               <div id="nextAvailView" class="formView">
                  <label for="nextAvailField">Next available</label>
                  <input type="date" id="nextAvailField" min="= ProductInventory.minNextAvailDateStr" changeEvent="=: psku.inventory.updateNextAvailStr(value)"/>
               </div>
            </div>
            <div id="optionsWrapperView">
               <div class="checkFormView">
                  <input id="hasOptionCheckbox" type="checkbox" checked=":= sku.optionScheme != null || showOptionsView" checked="=: updateHasOptions(checked)"/>
                  <label for="hasOptionCheckbox">Has options?</label>
               </div>
               <div id="optionsView" visible=":= showOptionsView">
                  <div class="subFormTitle">Sku options</div>
                  <div id="optionsSchemeFieldView" class="formView">
                     <label for="optionSchemeField">Scheme name</label>
                     <input id="optionsSchemeField" type="text" list="= optionSchemeSuggestions.getId()"
                            value=":= sku.optionScheme == null ? "" : sku.optionScheme.schemeName"
                            keyUpEvent="=: updateMatchingOptionSchemes(value)"
                            changeEvent="=: updateOptionScheme(value)"/>
                     <datalist id="optionSchemeSuggestions">
                        <option repeat=":= matchingOptionSchemes" repeatVarName="matchedScheme" value=":= matchedScheme.schemeName"/>
                     </datalist>
                     <input type="button" value="Add option scheme" class="rightButton"
                            clickEvent="=: startNewOptionScheme()" disabled=":= showNewOptionsView"/>
                  </div>
                  <div id="optionSchemeView" visible=":= showNewOptionsView">
                     <div class="subFormTitle">New option scheme</div>
                     <div class="formView">
                        <label for="schemeNameField">Name</label>
                        <input id="schemeNameField" type="text" value=":=: optionScheme.schemeName"/>
                     </div>

                     <div class="boxTitle">List of options</div>
                     <div class="optionListView">
                        <div id="newOptionView" class="newOptionView" repeat=":= optionScheme.options" repeatVarName="productOption">
                           <div class="formView">
                              <label for="optionNameField">Option #<%= newOptionView.this.repeatIndex+1 %> name</label>
                              <input type="text" id="optionNameField" value=":=: productOption.optionName"
                                     placeholder="e.g. Size, Color"/>
                              <input type="image" class="clearOptionButton" src="/icons/x-square.svg"
                                     visible=":= optionScheme.options.size() > 1"
                                     clickEvent="=: removeOption(productOption)"/>
                           </div>
                           <div class="boxTitle">List of values</div>
                          <div class="optionValueList">
                             <div id="newValueView" class="newValueView" repeat=":= productOption.optionValues" repeatVarName="optionValue">
                                <label for="optionValueNameField">Value #<%= newValueView.this.repeatIndex+1 %></label>
                                <input type="text" id="optionValueNameField" value=":=: optionValue.optionValue"
                                       placeholder="e.g. Small, Blue"/>
                                <label for="optionValueNameField">Option sku code</label>
                                <input type="text" id="optionValueSkuField" value=":=: optionValue.skuSymbol"
                                       placeholder="e.g. sm, blu"/>
                                <label for="defaultOptionCheckbox">Default</label>
                                <input id="defaultOptionCheckbox" type="checkbox" checked=":= optionValue == productOption.defaultValue" changeEvent="=: productOption.defaultValue = optionValue"/>
                                <input visible=":= productOption.optionValues.size() > 1" type="image" class="clearOptionButton" src="/icons/x-square.svg"
                                       clickEvent="=: removeOptionValue(productOption, optionValue)"/>
                              </div>
                              <input type="button" class="endListButton" value="Add another value" clickEvent="=: addNewOptionValue(productOption)"/>
                           </div>
                        </div>
                        <input type="button" class="endListButton" value="Add another option" clickEvent="=: addNewOption()"/>
                     </div>
                     <div class="formView confirmButtons">
                        <input type="button" value="Save option scheme" clickEvent="=: completeNewOptionScheme()"/>
                        <input type="button" class="rightButton" value="Cancel" clickEvent="=: cancelNewOptionScheme()"/>
                     </div>
                  </div>
               </div>
            </div>
            <div id="addSkuButtons" class="formView">
               <input type="button" clickEvent="=: completeAddSku()" value="Add Sku"/>
               <input type="button" class="rightButton" clickEvent="=: addSkuInProgress = false" value="Cancel "/>
            </div>
         </div></div>


         <div id="addCancel" visible=":= addInProgress" class="formView confirmButtons">
            <input type="button" value="Save product" disabled=":= product == null || product.propErrors != null" clickEvent="=: doAddProduct()"/>
            <input type="button" class="rightButton" value="Cancel" clickEvent="=: cancelAddProduct()"/>
         </div>
      </div>

      <span id="prodStatusView" class="errorMessage" visible=":= errorMessage != null">
         <%= errorMessage %>
         <div id="alt" class="statusMessage"><%= statusMessage %></div>
      </span>
   </div>

   <div id="listView">
      <div class="headerRow" visible=":= productList != null && productList.size() > 0">
         <span class="wideHeaderColumn">Name</span>
         <span class="headerColumn">Media</span>
         <span class="headerColumn">Pathname</span>
         <span class="headerColumn">Category</span>
         <span class="headerColumn">Sku code</span>
         <span class="headerColumn">Options</span>
         <span class="headerColumn">Visible</span>
      </div>
      <div id="productElemView" repeat=":= productList" repeatVarName="productElem"
           class=':= productElem == product ? "selectedProductRow" : "productRow"'>
        <span class="wideHeaderColumn" clickEvent="=: doSelectProduct(productElem)">
           <input type="checkbox" checked=":= product == productElem"/>
           <%= productElem.name %>
        </span>
        <span class="headerColumn" clickEvent="=: doSelectProduct(productElem)">
           <img src=":= productElem.mainMedia.thumbUrl"/>
        </span>
        <span class="headerColumn"> <%= productElem.pathName %> </span>
        <span class="headerColumn"> <%= productElem.parentCategory == null ? "none" : productElem.parentCategory.pathName %> </span>
        <span class="headerColumn"> <%= productElem.sku == null ? "no sku" : productElem.sku.getDisplaySummary(store) %> </span>
        <span class="headerColumn"> 
           <%= productElem.sku == null || productElem.sku.optionScheme == null ? "n/a" : productElem.sku.optionScheme.schemeName %>
         </span>
        <span class="headerColumn"> <input type="checkbox" checked=":=: productElem.visible"/> </span>
        <input type="image" class="removeProductButton" src="/icons/x-square.svg" clickEvent="=: removeProduct(productElem.id)"/>
      </div>
   </div>
</div>
