<div extends="BaseProductManagerView">
   <div class="pageTitle">
      Manage products
   </div>
   <div id="findProductsView" visible=":= !addInProgress">
      <div id="showProductsForm" class="formField">
         <label for="showAllButton">Show products</label>
         <input type="button" value="All" id="showAllButton" class="showAllButton" clickEvent="=: doSearchAll()"/>
         <input type="button" value="Recent" id="showRecentButton" class="showRecentButton rightButton" clickEvent="=: doSearchRecent()"/>
      </div>
      <div id="findProductsForm" class="formField">
         <label for="searchTextField">Find products</label><input type="text" value=":=: searchText" changeEvent="=: doSearch()"/>
         <input type="image" id="findProductButton" class="findProductButton" src="/icons/search.svg" clickEvent="=: doSearch()"/>
         <input type="image" id="clearProductButton" class="clearProductButton" src="/icons/x-square.svg" clickEvent="=: resetForm()"/>
      </div>
   </div>

   <div id="extraFormView">
      <div id="startAddView">
         <div visible=":= !addInProgress" class="formField confirmButtons">
            <input type="button" value="Add product" clickEvent="=: startAddProduct(false)" />
            <input type="button" class="rightButton" visible=":= product != null" value="Copy product" clickEvent="=: startAddProduct(true)"/>
         </div>
      </div>

      <div id="detailFormView" class="formContainer" visible=':= product != null'>
         <div class="formTitle">
            <%= addInProgress ? "Unsaved product" : "Update product" %>
            <span class="titleDetailLink" visible=":= !addInProgress"><a target="previewView" href=':= product.pageUrl'>(view product in new tab)</a></span>
         </div>

         <div id="productInfoView" class="subFormView">
            <span class="subFormTitle">Product info</span>
            <div id="nameFieldView" class="formField">
               <label for="nameField">Product name</label>
               <input id="nameField" type="text" value=":= product.name" changeEvent="=: updateProductName(value)"
                      class=':= product.propErrors.get("name") == null ? "fieldInput" : "fieldInputError"' placeholder="display name"/>
            </div>
            <div id="nameErrorView" class="formError"><%= product.propErrors.get("name") %></div>
            <div id="pathNameView" class="formField">
               <label for="pathNameField">Path name</label>
               <input id="pathNameField" type="text" value=":= product.pathName" changeEvent="=: updatePathName(value)"
                      class=':= product.propErrors.get("pathName") == null ? "fieldInput" : "fieldInputError"'
                      placeholder="browser location name (no spaces)"/>
            </div>
            <div id="visibleView" class="formField">
               <label for="visibleField">Product is available</label>
               <input id="visibleField" type="checkbox" checked=":=: product.visible"/>
            </div>
            <div id="pathNameErrorView" class="formError"><%= product.propErrors.get("pathName") %></div>
            <div id="parentCategoryView" class="formField">
               <label for="parentCategoryField">Parent category path</label>
               <input id="parentCategoryField" type="text" list="= parentCategorySuggestions.getId()"
                      class=':= product.propErrors.get("parentCategory") == null ? "fieldInput" : "fieldInputError"'
                      value=':= parentCategoryPathName'
                      keyUpEvent="=: updateMatchingCategories(value)" changeEvent="=: updateParentCategory(value)"
                      placeholder="search for category"/>
               <datalist id="parentCategorySuggestions">
                  <option repeat=":= matchingCategories" repeatVarName="matchingCat" value=":= matchingCat.pathName"/>
               </datalist>
               <input class="rightButton" type="button" value="Add Category" clickEvent="=: startAddCategory()" disabled=":= showCategoryView"/>
               <input visible=":= categoryEditable" class="rightButton" type="button" value="Edit Category" clickEvent="=: showCategoryView = true"/>
            </div>
            <div id="parentCategoryErrorView" class="formError"><%= product.propErrors.get("parentCategory") %></div>
            <div id="addCategoryView" class=':= showCategoryView ? "detailView openDetail" : "detailView closedDetail"'>
               <%! int openCatViewHeight = 100;
               scrollHeight =: scrollHeight > 50 ? openCatViewHeight = scrollHeight : null; %>
               <style type="text/css">
                  #addCategoryView.openDetail {
                     max-height: <%= openCatViewHeight + 100 %>px;
                  }
               </style>
               <%! boolean enableAddCategory := category == null || addCategoryInProgress; %>
               <span class="subFormTitle"><%= enableAddCategory ? "Add Category" : "Update category" %></span>
               <div id="catNameView" class="formField">
                  <label for="catNameField">Category name</label>
                  <input type="text" id="catNameField" value=":= category.name" changeEvent="=: updateCategoryName(value)"
                         class=':= category.propErrors.get("name") == null ? "fieldInput" : "fieldInputError"'
                         placeholder="display name" disabled=":= !showCategoryView"/>
               </div>
               <div id="catPathNameView" class="formField">
                  <label for="catPathNameField">Category path name</label>
                  <input type="text" id="catNameField" value=":= category.pathName" changeEvent="=: updateCategoryPathName(value)"
                         class=':= category.propErrors.get("pathName") == null ? "fieldInput" : "fieldInputError"'
                         placeholder="browser location name (no spaces)" disabled=":= !showCategoryView"/>
               </div>
               <div id="addCategoryButtons" class="formField confirmButtons" visible=":= addCategoryInProgress">
                  <input type="button" clickEvent="=: completeAddCategory()" value="Add Category"/>
                  <input type="button" class="rightButton" clickEvent="=: cancelAddCategory()" value="Cancel"/>
                  <div id="alt" class="formField confirmButtons">
                     <input type="button" clickEvent="=: doneEditingCategory()" value="Done editing category" disabled=":= !showCategoryView"/>
                  </div>
               </div>
            </div>

            <div id="shortDescView" class="formField">
               <label for="shortDescField">Short description</label>
               <input id="shortDescField" type="text" value=":= product.shortDesc"
                      changeEvent="=: product.shortDesc = value"
                      class="wideTextField" placeholder="product summary"/>
            </div>

            <div id="longDescView" class="multiFormField formField">
               <label for="longDescText">Long description</label>
               <div id="longDescText" class="longDescText" extends="HtmlTextEditor" placeholder="detailed product description" content=":= product.longDesc"
                    content="=: longDescHtml = content"/>
            </div>

            <div id="visibleView" class="formField">
               <label for="visibleField">Product is featured</label>
               <input id="visibleField" type="checkbox" checked=":=: product.featured"/>
            </div>

            <div id="keywordsView" class="formField">
               <label for="shortDescField">Keywords</label>
               <input id="shortDescField" type="text" value=":= product.keywords" changeEvent="=: product.keywords = value"
                      class="wideTextField" placeholder="keywords describing product for search or categorization"/>
            </div>
         </div>

         <div id="skuSubForm" class="subFormView">
            <span class="subFormTitle">Sku, inventory, options</span>
            <div id="skuView" class="formField">
               <label for="skuField">Product Sku</label>
               <input id="skuField" type="text" list="= skuSuggestions.getId()" disabled=":= showSkuView"
                      class=':= skuFindErrorMessage == null ? "fieldInput" : "fieldInputError"'
                      value=":= product.sku == null ? skuSearchText : product.sku.skuCode"
                      keyUpEvent="=: doSearchSkus(value)" changeEvent="=: updateProductSku(value)"
                      placeholder="search for skus"/>
               <datalist id="skuSuggestions">
                  <option repeat=":= matchingSkus" repeatVarName="matchingSku" value=":= matchingSku.skuCode"/>
               </datalist>
               <input class="rightButton" type="button" value="Add Sku" clickEvent="=: startAddSku()" disabled=":= showSkuView"/>
               <input visible=":= skuEditable" class="rightButton" type="button" value="Edit Sku" clickEvent="=: showSkuView = true"/>
            </div>
            <div id="skuErrorView" class="formError"><%= skuFindErrorMessage %></div><div class="formStatus"><%= skuStatusMessage %></div>

            <div id="addSkuView" class=':= showSkuView ? "detailView openDetail" : "detailView closedDetail"' extends="SkuEditorView">
               <%! int openViewHeight = 500;
                   scrollHeight =: scrollHeight > 50 ? openViewHeight = scrollHeight : null; %>
               <style type="text/css">
                  #addSkuView.openDetail {
                     max-height: <%= openViewHeight + 100 %>px;
                  }
               </style>
            </div>
         </div>

         <div id="addMediaView" class="subFormView">
            <span class="subFormTitle">Product media</span>
            <span id="mediaTitle" visible=":= product.altMedia != null && product.altMedia.size() > 0">
               <span id="alt" class="mediaEmptyTitle">No media - add files from the library or upload new ones</span>
            </span>
            <div class="mediaImageList">
               <div id="prodMediaView" class="prodMediaView" repeat=":= product.altMedia" repeatVarName="media">
                  <img src=":= media.thumbUrl"/>
                  <span class="mediaInfoText"><%= media.uniqueFileName %></span>
                  <span class="mediaInfoText">
                     <input id="mainMediaCheck" type="checkbox" checked=":= media == product.mainMedia" changeEvent="=: product.mainMedia = media"/> main
                     <input type="image" class="clearMediaButton" src="/icons/x-square-sm.svg" clickEvent="=: removeElementMedia(media.id)"/>
                  </span>
                  <span class="mediaInfoText"><input id="mediaVisibleCheckbox" type="checkbox" checked=":= media.visible" changeEvent="=: updateMediaVisible(media, checked)"/> visible</span>
                  <span class="mediaInfoText"><%= media.filterPattern %></span>
               </div>
            </div>
            <div id="findMedia" class="formField">
               <label for="findMediaField">Add existing media</label>
               <input id="findMediaField" type="text" list="= findMediaSuggestions.getId()" value=":=: findMediaText"
                      keyUpEvent="=: updateMatchingMedia(value)" changeEvent="=: updateElementMedia(value)"
                      placeholder="search for media files"/>
               <datalist id="findMediaSuggestions">
                  <option repeat=":= matchingMedia" repeatVarName="matchedMedia" value=":= matchedMedia.uniqueFileName"/>
               </datalist>
            </div>
            <form id="addMediaForm" class="formField" method="post" enctype="multipart/form-data">
            <%!
               submitResult =: addMediaResult(submitResult);
               submitError =: addMediaError(submitError);
            %>
               <label for="uploadFile">Add new media</label>
               <input type="file" id="uploadFile" name="fileToUpload" accept=".jpg, .jpeg, .png"
                      changeEvent="=: addMediaForm.submitFormData("/mediaUpload")"/>
               <input id="mediaManagerIdField" type="hidden" name="mediaManagerId" value=":= String.valueOf(store.mediaManager.id)"/>
            </form>
            <div>
               <div visible=":= !addMediaForm.submitInProgress">
                  <div class="formError"><%= mediaErrorMessage %></div>
                  <div class="formStatus"><%= mediaStatusMessage%></div>
                  <div id="alt">
                     Uploading...
                  </div>
               </div>
            </div>
            <div id="mediaOptionsView" visible=":= sku != null && optionScheme != null" class="formField">
               <label for="mediaOptionRepeat">For options</label>
               <span id="mediaOptionRepeat" repeat=":= optionScheme.options" repeatVarName="productOption">
                  <select optionDataSource=":= productOption.optionFilterList" selectedIndex="0" class=':= mediaOptionRepeat.this.repeatIndex > 0 ? "rightButton" : ""'
                          changeEvent="=: updateMediaFilter(mediaOptionRepeat.this.repeatIndex, (String)selectedValue)"/>
               </span>
               <div id="alt" class="formMessage">Always visible - no options set for product's sku</div>
            </div>
         </div>

         <div id="addCancel" visible=":= addInProgress" class="formField confirmButtons">
            <input type="button" value="Save product" disabled=":= product == null || product.propErrors != null" clickEvent="=: completeAddProduct()"/>
            <input type="button" class="rightButton" value="Cancel" clickEvent="=: cancelAddProduct()"/>

            <div id="alt" class="formField confirmButtons">
               <input type="button" value="Done editing product" clickEvent="=: doneEditingProduct()"/>
            </div>
         </div>
      </div>

      <span id="prodStatusView" class="errorMessage" visible=":= errorMessage != null">
         <%= errorMessage %>
         <div id="alt" class="statusMessage"><%= statusMessage %></div>
      </span>
   </div>

   <div id="listView">
      <div id="resultsHeaderView" visible=":= productList != null && productList.size() > 0">
         <div class="leftFormStatus">Search results</div>
         <div id="resultsHeader" class="headerRow">
            <span class="wideHeaderColumn">Name</span>
            <span class="headerColumn">Media</span>
            <span class="headerColumn">Path name</span>
            <span class="headerColumn">Category</span>
            <span class="headerColumn">Sku code</span>
            <span class="smallHeaderColumn">Price</span>
            <span class="headerColumn">Inventory</span>
            <span class="smallHeaderColumn">Visible</span>
            <span class="headerColumn">Last modified</span>
            <span class="smallHeaderColumn"></span>
            <div id="alt" class="formStatus">
               <%= searchStatusMessage %>
            </div>
         </div>
      </div>
      <div id="productElemView" repeat=":= productList" repeatVarName="productElem"
           class=':= productElem == product ? "selectedProductRow" : "productRow"'>
        <span class="wideProductColumn" clickEvent="=: doSelectProduct(productElem)">
           <input type="checkbox" checked=":= product == productElem"/>
           <%= productElem.name %>
        </span>
        <span class="productColumn" clickEvent="=: doSelectProduct(productElem)">
           <img src=":= productElem.mainMedia.thumbUrl"/>
        </span>
        <span class="productColumn"> <a target="previewView" href=':= "/stores/" + store.sitePathName + "/product/" + productElem.pathName'><%= productElem.pathName %></a></span>
        <span class="productColumn"> <%= productElem.parentCategory == null ? "none" : productElem.parentCategory.pathName %> </span>
        <span class="productColumn">
           <a href=':= "/manage/sku/" + store.sitePathName + "/" + productElem.sku.skuCode'>
              <%= productElem.sku == null ? "no sku" : productElem.sku.skuCode%>
           </a>
        </span>
        <span class="smallProductColumn"> <%= productElem.sku == null ? "n/a" : productElem.sku.priceDisplayStr %> </span>
        <span class="productColumn"> <%= productElem.sku == null ? "n/a" : productElem.sku.inventoryDisplayStr %> </span>
        <span class="smallProductColumn"> <input type="checkbox" checked=":=: productElem.visible"/> </span>
        <span class="productColumn"> <%= TextUtil.formatUserDate(productElem.lastModified, true) %> </span>
        <input type="image" class="removeProductButton" src="/icons/x-square.svg" clickEvent="=: removeProduct(productElem.id)"/>
      </div>
   </div>
</div>
